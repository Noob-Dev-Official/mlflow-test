version: '3.5'

services:
  s3:
    image: minio/minio:RELEASE.2023-02-27T18-10-45Z
    volumes:
      - minio_vol:/data
    ports:
      - 9000:9000
      - 8000:8000
    environment:
      - MINIO_ROOT_USER=${AWS_ACCESS_KEY_ID}
      - MINIO_ROOT_PASSWORD=${AWS_SECRET_ACCESS_KEY}
    command: server --console-address ":8000" /data
    restart: on-failure

  createbuckets:
    image: minio/mc
    depends_on:
      - s3
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://s3:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY};
      /usr/bin/mc mb myminio/${AWS_BUCKET_NAME};
      /usr/bin/mc policy set public myminio/${AWS_BUCKET_NAME};
      exit 0;
      "

  db:
    image: mysql/mysql-server:5.7.28
    restart: unless-stopped
    expose:
      - "3306"
    ports:
      - 3306:3306
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    volumes:
      - db_volume:/var/lib/mysql


  mlflow:
    build:
      context: mlflow
      dockerfile: Dockerfile
    volumes:
      - mlflow_vol:/app
      - ./mlflow:/app
    environment:
      - TEST=test
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_REGION}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
      - MLFLOW_S3_ENDPOINT_URL=${MLFLOW_S3_ENDPOINT_URL}
      - MLFLOW_TRACKING_URI=${MLFLOW_TRACKING_URI}
    ports:
      - 3000:5000


  
volumes:
  minio_vol:
  mlflow_vol:
  db_volume:


  